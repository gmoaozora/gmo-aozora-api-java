/*
 * GMO Aozora Net Bank Open API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package corporate;

import common.ApiException;
import corporate.model.RequestTransferStatus;
import corporate.model.SpAccountTransferRequest;
import corporate.model.SpAccountTransferResponse;
import corporate.model.TransferFeeResponse;
import corporate.model.TransferRequest;
import corporate.model.TransferRequestResponse;
import corporate.model.TransferStatusResponse;
import org.junit.Ignore;
import org.junit.Test;

/**
 * API tests for TransferApi
 */
@Ignore
public class TransferApiTest {

    private final TransferApi api = new TransferApi();

    
    /**
     * つかいわけ口座間振替
     *
     * 円普通預金、証券コネクト口座、つかいわけ口座間の振替を実行します 振替の実行は即時となります つかいわけ口座間の明細移動は当APIの対象外です 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void spAccountTransferUsingPOSTTest() throws ApiException {
        SpAccountTransferRequest body = null;
        String xAccessToken = null;
        SpAccountTransferResponse response = api.spAccountTransferUsingPOST(body, xAccessToken);

        // TODO: test validations
    }
    
    /**
     * 振込手数料事前照会
     *
     * 振込・振込予約をAPIから行うための申請内容の事前チェックと手数料を照会します 画面と同じく最大99件まで登録可能 1件だと通常の振込扱いで2件以上だと一括振込扱いとなります 振込無料回数とポイントについては、算出から振込実行までに変動する可能性があるため、手数料算出時の計算対象から除外してます
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void transferFeeUsingPOSTTest() throws ApiException {
        TransferRequest body = null;
        String xAccessToken = null;
        TransferFeeResponse response = api.transferFeeUsingPOST(body, xAccessToken);

        // TODO: test validations
    }
    
    /**
     * 振込依頼
     *
     * 振込・振込予約を申請します 画面と同じく最大99件まで登録可能 1件だと通常の振込扱いで2件以上だと一括振込扱いとなります
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void transferRequestUsingPOSTTest() throws ApiException {
        TransferRequest body = null;
        String xAccessToken = null;
        TransferRequestResponse response = api.transferRequestUsingPOST(body, xAccessToken);

        // TODO: test validations
    }
    
    /**
     * 振込状況照会
     *
     * 仕向の振込履歴情報を照会します 対象期間From、対象期間Toを設定しない場合、当日分の振込明細を返却します ■ソート順 振込照会対象期間区分の指定により下記となります 　1：振込申請受付日　　第1ソート：振込申請日昇順　　第２ソート：振込申請番号昇順 　2：振込指定日　　　　第1ソート：振込指定日昇順　　第２ソート：振込申請番号昇順 ■ページング ・1回のリクエストで照会できる明細は、最大500件です ・2ページ目以降を照会する際は、初回と同じリクエスト内容に、初回レスポンスの次明細キーを追加してリクエストしてください ■照会対象ステータス   ・申請中以降のステータスで照会が可能となります ・依頼中、作成中の状態は照会対象外です ■照会対象となる明細   ・振込・振替・およびその予約の履歴と状況が照会対象となります（APIからの依頼結果のみではありません） ・定額自動振込契約によって自動登録された振込は照会対象となります ・定額自動振込契約の申請状態と状況は対象外となります 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void transferStatusUsingGETTest() throws ApiException {
        String accountId = null;
        String queryKeyClass = null;
        String xAccessToken = null;
        String applyNo = null;
        String dateFrom = null;
        String dateTo = null;
        String nextItemKey = null;
        RequestTransferStatus requestTransferStatuses = null;
        String requestTransferClass = null;
        String requestTransferTerm = null;
        TransferStatusResponse response = api.transferStatusUsingGET(accountId, queryKeyClass, xAccessToken, applyNo, dateFrom, dateTo, nextItemKey, requestTransferStatuses, requestTransferClass, requestTransferTerm);

        // TODO: test validations
    }
    
}
