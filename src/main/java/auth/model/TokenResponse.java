/*
 * GMO Aozora Net Bank Open API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package auth.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * TokenResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-12-21T11:18:42.855Z")
public class TokenResponse {
  @SerializedName("access_token")
  private String accessToken = null;

  @SerializedName("refresh_token")
  private String refreshToken = null;

  @SerializedName("scope")
  private String scope = null;

  @SerializedName("token_type")
  private String tokenType = null;

  @SerializedName("expires_in")
  private String expiresIn = null;

  @SerializedName("id_token")
  private String idToken = null;

  public TokenResponse accessToken(String accessToken) {
    this.accessToken = accessToken;
    return this;
  }

   /**
   * アクセストークン。 各APIを要求する際「x-access-token」に設定する値。 
   * @return accessToken
  **/
  @ApiModelProperty(example = "af0ifjsldkj", required = true, value = "アクセストークン。 各APIを要求する際「x-access-token」に設定する値。 ")
  public String getAccessToken() {
    return accessToken;
  }

  public void setAccessToken(String accessToken) {
    this.accessToken = accessToken;
  }

  public TokenResponse refreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
    return this;
  }

   /**
   * 新しいアクセストークンを取得する際に使用するリフレッシュトークン。 
   * @return refreshToken
  **/
  @ApiModelProperty(example = "af0ifjsldkj", required = true, value = "新しいアクセストークンを取得する際に使用するリフレッシュトークン。 ")
  public String getRefreshToken() {
    return refreshToken;
  }

  public void setRefreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
  }

  public TokenResponse scope(String scope) {
    this.scope = scope;
    return this;
  }

   /**
   * アクセストークンに紐付く許諾されたスコープ。
   * @return scope
  **/
  @ApiModelProperty(example = "private:account private:virtual-account", required = true, value = "アクセストークンに紐付く許諾されたスコープ。")
  public String getScope() {
    return scope;
  }

  public void setScope(String scope) {
    this.scope = scope;
  }

  public TokenResponse tokenType(String tokenType) {
    this.tokenType = tokenType;
    return this;
  }

   /**
   * アクセストークンに紐付く許諾されたスコープ。
   * @return tokenType
  **/
  @ApiModelProperty(example = "発行されたトークンタイプ。 Bearer固定。", required = true, value = "アクセストークンに紐付く許諾されたスコープ。")
  public String getTokenType() {
    return tokenType;
  }

  public void setTokenType(String tokenType) {
    this.tokenType = tokenType;
  }

  public TokenResponse expiresIn(String expiresIn) {
    this.expiresIn = expiresIn;
    return this;
  }

   /**
   * アクセストークンの有効期限。(秒単位)
   * @return expiresIn
  **/
  @ApiModelProperty(example = "2592000", required = true, value = "アクセストークンの有効期限。(秒単位)")
  public String getExpiresIn() {
    return expiresIn;
  }

  public void setExpiresIn(String expiresIn) {
    this.expiresIn = expiresIn;
  }

  public TokenResponse idToken(String idToken) {
    this.idToken = idToken;
    return this;
  }

   /**
   * IDトークン。 JWT形式で応答される。
   * @return idToken
  **/
  @ApiModelProperty(value = "IDトークン。 JWT形式で応答される。")
  public String getIdToken() {
    return idToken;
  }

  public void setIdToken(String idToken) {
    this.idToken = idToken;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TokenResponse tokenResponse = (TokenResponse) o;
    return Objects.equals(this.accessToken, tokenResponse.accessToken) &&
        Objects.equals(this.refreshToken, tokenResponse.refreshToken) &&
        Objects.equals(this.scope, tokenResponse.scope) &&
        Objects.equals(this.tokenType, tokenResponse.tokenType) &&
        Objects.equals(this.expiresIn, tokenResponse.expiresIn) &&
        Objects.equals(this.idToken, tokenResponse.idToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessToken, refreshToken, scope, tokenType, expiresIn, idToken);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TokenResponse {\n");
    
    sb.append("    accessToken: ").append(toIndentedString(accessToken)).append("\n");
    sb.append("    refreshToken: ").append(toIndentedString(refreshToken)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    tokenType: ").append(toIndentedString(tokenType)).append("\n");
    sb.append("    expiresIn: ").append(toIndentedString(expiresIn)).append("\n");
    sb.append("    idToken: ").append(toIndentedString(idToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

