/*
 * GMO Aozora Net Bank Open API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package corporate.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import java.util.Objects;

/**
 * VisaTransaction
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-12-18T06:43:57.831Z")
public class VisaTransaction {
  @SerializedName("useDate")
  private String useDate = null;

  @SerializedName("useContent")
  private String useContent = null;

  @SerializedName("amount")
  private String amount = null;

  @SerializedName("localCurrencyAmount")
  private String localCurrencyAmount = null;

  @SerializedName("conversionRate")
  private String conversionRate = null;

  @SerializedName("approvalNumber")
  private String approvalNumber = null;

  @SerializedName("visaStatus")
  private String visaStatus = null;

  @SerializedName("currencyCode")
  private String currencyCode = null;

  @SerializedName("atmCommission")
  private String atmCommission = null;

  public VisaTransaction useDate(String useDate) {
    this.useDate = useDate;
    return this;
  }

   /**
   * 利用日 半角文字 YYYY-MM-DD形式 
   * @return useDate
  **/
  @ApiModelProperty(example = "2018-07-30", required = true, value = "利用日 半角文字 YYYY-MM-DD形式 ")
  public String getUseDate() {
    return useDate;
  }

  public void setUseDate(String useDate) {
    this.useDate = useDate;
  }

  public VisaTransaction useContent(String useContent) {
    this.useContent = useContent;
    return this;
  }

   /**
   * 利用内容 全半角文字
   * @return useContent
  **/
  @ApiModelProperty(example = "ｷｯｻ ｱｵｿﾞﾗ", required = true, value = "利用内容 全半角文字")
  public String getUseContent() {
    return useContent;
  }

  public void setUseContent(String useContent) {
    this.useContent = useContent;
  }

  public VisaTransaction amount(String amount) {
    this.amount = amount;
    return this;
  }

   /**
   * 利用金額 半角数字　マイナス含む 円貨金額
   * @return amount
  **/
  @ApiModelProperty(example = "50000", required = true, value = "利用金額 半角数字　マイナス含む 円貨金額")
  public String getAmount() {
    return amount;
  }

  public void setAmount(String amount) {
    this.amount = amount;
  }

  public VisaTransaction localCurrencyAmount(String localCurrencyAmount) {
    this.localCurrencyAmount = localCurrencyAmount;
    return this;
  }

   /**
   * 現地通貨金額 半角数字 小数部最大6桁 マイナス含む 国内利用の場合は項目自体を設定しません
   * @return localCurrencyAmount
  **/
  @ApiModelProperty(example = "3211.02", required = true, value = "現地通貨金額 半角数字 小数部最大6桁 マイナス含む 国内利用の場合は項目自体を設定しません")
  public String getLocalCurrencyAmount() {
    return localCurrencyAmount;
  }

  public void setLocalCurrencyAmount(String localCurrencyAmount) {
    this.localCurrencyAmount = localCurrencyAmount;
  }

  public VisaTransaction conversionRate(String conversionRate) {
    this.conversionRate = conversionRate;
    return this;
  }

   /**
   * 円換算レート 半角数字 小数部最大6桁 マイナス含む 国内利用の場合は項目自体を設定しません
   * @return conversionRate
  **/
  @ApiModelProperty(example = "123.012310", value = "円換算レート 半角数字 小数部最大6桁 マイナス含む 国内利用の場合は項目自体を設定しません")
  public String getConversionRate() {
    return conversionRate;
  }

  public void setConversionRate(String conversionRate) {
    this.conversionRate = conversionRate;
  }

  public VisaTransaction approvalNumber(String approvalNumber) {
    this.approvalNumber = approvalNumber;
    return this;
  }

   /**
   * 承認番号 半角数字 
   * @return approvalNumber
  **/
  @ApiModelProperty(example = "123456", required = true, value = "承認番号 半角数字 ")
  public String getApprovalNumber() {
    return approvalNumber;
  }

  public void setApprovalNumber(String approvalNumber) {
    this.approvalNumber = approvalNumber;
  }

  public VisaTransaction visaStatus(String visaStatus) {
    this.visaStatus = visaStatus;
    return this;
  }

   /**
   * ステータス 半角数字 1:確定・・・決済として完了している状態 2:未確定・・・加盟店からの情報によりお客様の口座から資金を引き落としていますが、決済としては完了していない状態 3:取消済・・・取消を行った状態
   * @return visaStatus
  **/
  @ApiModelProperty(example = "1", value = "ステータス 半角数字 1:確定・・・決済として完了している状態 2:未確定・・・加盟店からの情報によりお客様の口座から資金を引き落としていますが、決済としては完了していない状態 3:取消済・・・取消を行った状態")
  public String getVisaStatus() {
    return visaStatus;
  }

  public void setVisaStatus(String visaStatus) {
    this.visaStatus = visaStatus;
  }

  public VisaTransaction currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * 通貨コード 半角文字 ISO4217準拠した通貨コード 国内利用の場合は項目自体を設定しません
   * @return currencyCode
  **/
  @ApiModelProperty(example = "EUR", value = "通貨コード 半角文字 ISO4217準拠した通貨コード 国内利用の場合は項目自体を設定しません")
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

  public VisaTransaction atmCommission(String atmCommission) {
    this.atmCommission = atmCommission;
    return this;
  }

   /**
   * ATM手数料 半角数字 小数点および小数部最大6桁、マイナス含む 現地通貨金額でのATM手数料 国内利用の場合または、ATM手数料が発生していない場合は項目自体を設定しません
   * @return atmCommission
  **/
  @ApiModelProperty(example = "1.01", value = "ATM手数料 半角数字 小数点および小数部最大6桁、マイナス含む 現地通貨金額でのATM手数料 国内利用の場合または、ATM手数料が発生していない場合は項目自体を設定しません")
  public String getAtmCommission() {
    return atmCommission;
  }

  public void setAtmCommission(String atmCommission) {
    this.atmCommission = atmCommission;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VisaTransaction visaTransaction = (VisaTransaction) o;
    return Objects.equals(this.useDate, visaTransaction.useDate) &&
        Objects.equals(this.useContent, visaTransaction.useContent) &&
        Objects.equals(this.amount, visaTransaction.amount) &&
        Objects.equals(this.localCurrencyAmount, visaTransaction.localCurrencyAmount) &&
        Objects.equals(this.conversionRate, visaTransaction.conversionRate) &&
        Objects.equals(this.approvalNumber, visaTransaction.approvalNumber) &&
        Objects.equals(this.visaStatus, visaTransaction.visaStatus) &&
        Objects.equals(this.currencyCode, visaTransaction.currencyCode) &&
        Objects.equals(this.atmCommission, visaTransaction.atmCommission);
  }

  @Override
  public int hashCode() {
    return Objects.hash(useDate, useContent, amount, localCurrencyAmount, conversionRate, approvalNumber, visaStatus, currencyCode, atmCommission);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VisaTransaction {\n");

    sb.append("    useDate: ").append(toIndentedString(useDate)).append("\n");
    sb.append("    useContent: ").append(toIndentedString(useContent)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    localCurrencyAmount: ").append(toIndentedString(localCurrencyAmount)).append("\n");
    sb.append("    conversionRate: ").append(toIndentedString(conversionRate)).append("\n");
    sb.append("    approvalNumber: ").append(toIndentedString(approvalNumber)).append("\n");
    sb.append("    visaStatus: ").append(toIndentedString(visaStatus)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    atmCommission: ").append(toIndentedString(atmCommission)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

