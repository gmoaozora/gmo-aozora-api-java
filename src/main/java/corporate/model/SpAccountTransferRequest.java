/*
 * GMO Aozora Net Bank Open API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package corporate.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import java.util.Objects;

/**
 * SpAccountTransferRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-12-18T06:43:57.831Z")
public class SpAccountTransferRequest {
  @SerializedName("depositSpAccountId")
  private String depositSpAccountId = null;

  @SerializedName("debitSpAccountId")
  private String debitSpAccountId = null;

  @SerializedName("currencyCode")
  private String currencyCode = null;

  @SerializedName("paymentAmount")
  private String paymentAmount = null;

  public SpAccountTransferRequest depositSpAccountId(String depositSpAccountId) {
    this.depositSpAccountId = depositSpAccountId;
    return this;
  }

   /**
   * つかいわけ口座_入金口座ID 半角数字 口座を識別するID　入金先となる口座情報 
   * @return depositSpAccountId
  **/
  @ApiModelProperty(example = "101011234567", required = true, value = "つかいわけ口座_入金口座ID 半角数字 口座を識別するID　入金先となる口座情報 ")
  public String getDepositSpAccountId() {
    return depositSpAccountId;
  }

  public void setDepositSpAccountId(String depositSpAccountId) {
    this.depositSpAccountId = depositSpAccountId;
  }

  public SpAccountTransferRequest debitSpAccountId(String debitSpAccountId) {
    this.debitSpAccountId = debitSpAccountId;
    return this;
  }

   /**
   * つかいわけ口座_出金口座ID 半角数字 口座を識別するID　引き落とし元となる口座情報 
   * @return debitSpAccountId
  **/
  @ApiModelProperty(example = "201012345678", required = true, value = "つかいわけ口座_出金口座ID 半角数字 口座を識別するID　引き落とし元となる口座情報 ")
  public String getDebitSpAccountId() {
    return debitSpAccountId;
  }

  public void setDebitSpAccountId(String debitSpAccountId) {
    this.debitSpAccountId = debitSpAccountId;
  }

  public SpAccountTransferRequest currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * 通貨コード 半角文字 ISO4217準拠した通貨コード 省略時はJPYとみなします 
   * @return currencyCode
  **/
  @ApiModelProperty(example = "JPY", value = "通貨コード 半角文字 ISO4217準拠した通貨コード 省略時はJPYとみなします ")
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

  public SpAccountTransferRequest paymentAmount(String paymentAmount) {
    this.paymentAmount = paymentAmount;
    return this;
  }

   /**
   * 支払金額 数値のみでカンマ、マイナス不可　1以上であること 
   * @return paymentAmount
  **/
  @ApiModelProperty(example = "5000", required = true, value = "支払金額 数値のみでカンマ、マイナス不可　1以上であること ")
  public String getPaymentAmount() {
    return paymentAmount;
  }

  public void setPaymentAmount(String paymentAmount) {
    this.paymentAmount = paymentAmount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SpAccountTransferRequest spAccountTransferRequest = (SpAccountTransferRequest) o;
    return Objects.equals(this.depositSpAccountId, spAccountTransferRequest.depositSpAccountId) &&
        Objects.equals(this.debitSpAccountId, spAccountTransferRequest.debitSpAccountId) &&
        Objects.equals(this.currencyCode, spAccountTransferRequest.currencyCode) &&
        Objects.equals(this.paymentAmount, spAccountTransferRequest.paymentAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(depositSpAccountId, debitSpAccountId, currencyCode, paymentAmount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SpAccountTransferRequest {\n");

    sb.append("    depositSpAccountId: ").append(toIndentedString(depositSpAccountId)).append("\n");
    sb.append("    debitSpAccountId: ").append(toIndentedString(debitSpAccountId)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    paymentAmount: ").append(toIndentedString(paymentAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

