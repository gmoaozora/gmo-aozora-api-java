/*
 * GMO Aozora Net Bank Open API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package corporate.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import java.util.Objects;

/**
 * UnableDetailInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-12-18T06:43:57.831Z")
public class UnableDetailInfo {
  @SerializedName("transferDetailStatus")
  private String transferDetailStatus = null;

  @SerializedName("refundStatus")
  private String refundStatus = null;

  @SerializedName("isRepayment")
  private Boolean isRepayment = null;

  @SerializedName("repaymentDate")
  private String repaymentDate = null;

  public UnableDetailInfo transferDetailStatus(String transferDetailStatus) {
    this.transferDetailStatus = transferDetailStatus;
    return this;
  }

   /**
   * 振込詳細ステータス 半角数字 1：手続済、2：手続不成立 手続中より前は該当する情報無しとみなし項目自体を設定しません 
   * @return transferDetailStatus
  **/
  @ApiModelProperty(example = "1", value = "振込詳細ステータス 半角数字 1：手続済、2：手続不成立 手続中より前は該当する情報無しとみなし項目自体を設定しません ")
  public String getTransferDetailStatus() {
    return transferDetailStatus;
  }

  public void setTransferDetailStatus(String transferDetailStatus) {
    this.transferDetailStatus = transferDetailStatus;
  }

  public UnableDetailInfo refundStatus(String refundStatus) {
    this.refundStatus = refundStatus;
    return this;
  }

   /**
   * 組戻ステータス 半角数字 1：組戻手続中、2：組戻済、3：組戻不成立 組み戻しなし、および該当する情報が無い場合は項目自体を設定しません 
   * @return refundStatus
  **/
  @ApiModelProperty(example = "1", value = "組戻ステータス 半角数字 1：組戻手続中、2：組戻済、3：組戻不成立 組み戻しなし、および該当する情報が無い場合は項目自体を設定しません ")
  public String getRefundStatus() {
    return refundStatus;
  }

  public void setRefundStatus(String refundStatus) {
    this.refundStatus = refundStatus;
  }

  public UnableDetailInfo isRepayment(Boolean isRepayment) {
    this.isRepayment = isRepayment;
    return this;
  }

   /**
   * 資金返却フラグ true&#x3D;あり 無し、および該当する情報が無い場合は項目自体を設定しません 
   * @return isRepayment
  **/
  @ApiModelProperty(example = "true", value = "資金返却フラグ true=あり 無し、および該当する情報が無い場合は項目自体を設定しません ")
  public Boolean isIsRepayment() {
    return isRepayment;
  }

  public void setIsRepayment(Boolean isRepayment) {
    this.isRepayment = isRepayment;
  }

  public UnableDetailInfo repaymentDate(String repaymentDate) {
    this.repaymentDate = repaymentDate;
    return this;
  }

   /**
   * 資金返却日 半角文字 YYYY-MM-DD形式 総合振込のみ表示 該当する情報が無い場合は項目自体を設定しません 
   * @return repaymentDate
  **/
  @ApiModelProperty(example = "2018-07-30", value = "資金返却日 半角文字 YYYY-MM-DD形式 総合振込のみ表示 該当する情報が無い場合は項目自体を設定しません ")
  public String getRepaymentDate() {
    return repaymentDate;
  }

  public void setRepaymentDate(String repaymentDate) {
    this.repaymentDate = repaymentDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UnableDetailInfo unableDetailInfo = (UnableDetailInfo) o;
    return Objects.equals(this.transferDetailStatus, unableDetailInfo.transferDetailStatus) &&
        Objects.equals(this.refundStatus, unableDetailInfo.refundStatus) &&
        Objects.equals(this.isRepayment, unableDetailInfo.isRepayment) &&
        Objects.equals(this.repaymentDate, unableDetailInfo.repaymentDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transferDetailStatus, refundStatus, isRepayment, repaymentDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UnableDetailInfo {\n");

    sb.append("    transferDetailStatus: ").append(toIndentedString(transferDetailStatus)).append("\n");
    sb.append("    refundStatus: ").append(toIndentedString(refundStatus)).append("\n");
    sb.append("    isRepayment: ").append(toIndentedString(isRepayment)).append("\n");
    sb.append("    repaymentDate: ").append(toIndentedString(repaymentDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

