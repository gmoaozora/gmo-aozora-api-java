/*
 * GMO Aozora Net Bank Open API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package corporate.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * TransferStatusResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-12-18T06:43:57.831Z")
public class TransferStatusResponse {
  @SerializedName("acceptanceKeyClass")
  private String acceptanceKeyClass = null;

  @SerializedName("baseDate")
  private String baseDate = null;

  @SerializedName("baseTime")
  private String baseTime = null;

  @SerializedName("count")
  private String count = null;

  @SerializedName("transferQueryBulkResponses")
  private List<TransferQueryBulkResponse> transferQueryBulkResponses = null;

  @SerializedName("transferDetails")
  private List<TransferDetail> transferDetails = null;

  public TransferStatusResponse acceptanceKeyClass(String acceptanceKeyClass) {
    this.acceptanceKeyClass = acceptanceKeyClass;
    return this;
  }

   /**
   * 照会対象キー区分 半角数字 リクエストしたときと同じ内容 照会対象のキー 1：振込申請照会対象指定、2：振込一括照会対象指定
   * @return acceptanceKeyClass
  **/
  @ApiModelProperty(example = "1", required = true, value = "照会対象キー区分 半角数字 リクエストしたときと同じ内容 照会対象のキー 1：振込申請照会対象指定、2：振込一括照会対象指定 ")
  public String getAcceptanceKeyClass() {
    return acceptanceKeyClass;
  }

  public void setAcceptanceKeyClass(String acceptanceKeyClass) {
    this.acceptanceKeyClass = acceptanceKeyClass;
  }

  public TransferStatusResponse baseDate(String baseDate) {
    this.baseDate = baseDate;
    return this;
  }

   /**
   * 基準日 半角文字 応答日付、もしくは振込明細の基準日を示します YYYY-MM-DD形式
   * @return baseDate
  **/
  @ApiModelProperty(example = "2018-08-10", required = true, value = "基準日 半角文字 応答日付、もしくは振込明細の基準日を示します YYYY-MM-DD形式 ")
  public String getBaseDate() {
    return baseDate;
  }

  public void setBaseDate(String baseDate) {
    this.baseDate = baseDate;
  }

  public TransferStatusResponse baseTime(String baseTime) {
    this.baseTime = baseTime;
    return this;
  }

   /**
   * 基準時刻 半角文字 応答時刻、もしくは振込明細の基準時刻を示します HH:MM:SS+09:00形式
   * @return baseTime
  **/
  @ApiModelProperty(example = "10:00:00+09:00", required = true, value = "基準時刻 半角文字 応答時刻、もしくは振込明細の基準時刻を示します HH:MM:SS+09:00形式 ")
  public String getBaseTime() {
    return baseTime;
  }

  public void setBaseTime(String baseTime) {
    this.baseTime = baseTime;
  }

  public TransferStatusResponse count(String count) {
    this.count = count;
    return this;
  }

   /**
   * 明細取得件数 半角数字 振込明細の件数
   * @return count
  **/
  @ApiModelProperty(example = "500", required = true, value = "明細取得件数 半角数字 振込明細の件数 ")
  public String getCount() {
    return count;
  }

  public void setCount(String count) {
    this.count = count;
  }

  public TransferStatusResponse transferQueryBulkResponses(List<TransferQueryBulkResponse> transferQueryBulkResponses) {
    this.transferQueryBulkResponses = transferQueryBulkResponses;
    return this;
  }

  public TransferStatusResponse addTransferQueryBulkResponsesItem(
      TransferQueryBulkResponse transferQueryBulkResponsesItem) {
    if (this.transferQueryBulkResponses == null) {
      this.transferQueryBulkResponses = new ArrayList<>();
    }
    this.transferQueryBulkResponses.add(transferQueryBulkResponsesItem);
    return this;
  }

   /**
   * 振込一括照会対象指定レスポンス 該当する情報が無い場合は項目自体を設定しません
   * @return transferQueryBulkResponses
  **/
  @ApiModelProperty(value = "振込一括照会対象指定レスポンス 該当する情報が無い場合は項目自体を設定しません ")
  public List<TransferQueryBulkResponse> getTransferQueryBulkResponses() {
    return transferQueryBulkResponses;
  }

  public void setTransferQueryBulkResponses(List<TransferQueryBulkResponse> transferQueryBulkResponses) {
    this.transferQueryBulkResponses = transferQueryBulkResponses;
  }

  public TransferStatusResponse transferDetails(List<TransferDetail> transferDetails) {
    this.transferDetails = transferDetails;
    return this;
  }

  public TransferStatusResponse addTransferDetailsItem(TransferDetail transferDetailsItem) {
    if (this.transferDetails == null) {
      this.transferDetails = new ArrayList<>();
    }
    this.transferDetails.add(transferDetailsItem);
    return this;
  }

   /**
   * 振込照会明細情報 振込照会明細情報のリスト 該当する情報が無い場合は空のリストを返却
   * @return transferDetails
  **/
  @ApiModelProperty(value = "振込照会明細情報 振込照会明細情報のリスト 該当する情報が無い場合は空のリストを返却 ")
  public List<TransferDetail> getTransferDetails() {
    return transferDetails;
  }

  public void setTransferDetails(List<TransferDetail> transferDetails) {
    this.transferDetails = transferDetails;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransferStatusResponse transferStatusResponse = (TransferStatusResponse) o;
    return Objects.equals(this.acceptanceKeyClass, transferStatusResponse.acceptanceKeyClass) &&
        Objects.equals(this.baseDate, transferStatusResponse.baseDate) &&
        Objects.equals(this.baseTime, transferStatusResponse.baseTime) &&
        Objects.equals(this.count, transferStatusResponse.count) &&
        Objects.equals(this.transferQueryBulkResponses, transferStatusResponse.transferQueryBulkResponses) &&
        Objects.equals(this.transferDetails, transferStatusResponse.transferDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acceptanceKeyClass, baseDate, baseTime, count, transferQueryBulkResponses, transferDetails);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransferStatusResponse {\n");

    sb.append("    acceptanceKeyClass: ").append(toIndentedString(acceptanceKeyClass)).append("\n");
    sb.append("    baseDate: ").append(toIndentedString(baseDate)).append("\n");
    sb.append("    baseTime: ").append(toIndentedString(baseTime)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    transferQueryBulkResponses: ").append(toIndentedString(transferQueryBulkResponses)).append("\n");
    sb.append("    transferDetails: ").append(toIndentedString(transferDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

