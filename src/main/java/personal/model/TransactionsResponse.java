/*
 * GMO Aozora Net Bank Open API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package personal.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * TransactionsResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-12-18T06:43:57.831Z")
public class TransactionsResponse {
  @SerializedName("accountId")
  private String accountId = null;

  @SerializedName("currencyCode")
  private String currencyCode = null;

  @SerializedName("currencyName")
  private String currencyName = null;

  @SerializedName("dateFrom")
  private String dateFrom = null;

  @SerializedName("dateTo")
  private String dateTo = null;

  @SerializedName("baseDate")
  private String baseDate = null;

  @SerializedName("baseTime")
  private String baseTime = null;

  @SerializedName("hasNext")
  private Boolean hasNext = null;

  @SerializedName("nextItemKey")
  private String nextItemKey = null;

  @SerializedName("count")
  private String count = null;

  @SerializedName("transactions")
  private List<Transaction> transactions = null;

  public TransactionsResponse accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * 口座ID 半角英数字 口座を識別するID 
   * @return accountId
  **/
  @ApiModelProperty(example = "101011234567", required = true, value = "口座ID 半角英数字 口座を識別するID ")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public TransactionsResponse currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * 通貨コード 半角文字 ISO4217に準拠した通貨コード 
   * @return currencyCode
  **/
  @ApiModelProperty(example = "JPY", required = true, value = "通貨コード 半角文字 ISO4217に準拠した通貨コード ")
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

  public TransactionsResponse currencyName(String currencyName) {
    this.currencyName = currencyName;
    return this;
  }

   /**
   * 通貨名 全角文字 ISO4217に準拠した通貨コードの当行での名称 
   * @return currencyName
  **/
  @ApiModelProperty(example = "日本円", required = true, value = "通貨名 全角文字 ISO4217に準拠した通貨コードの当行での名称 ")
  public String getCurrencyName() {
    return currencyName;
  }

  public void setCurrencyName(String currencyName) {
    this.currencyName = currencyName;
  }

  public TransactionsResponse dateFrom(String dateFrom) {
    this.dateFrom = dateFrom;
    return this;
  }

   /**
   * 対象期間From 半角文字 YYYY-MM-DD形式 
   * @return dateFrom
  **/
  @ApiModelProperty(example = "2018-07-30", required = true, value = "対象期間From 半角文字 YYYY-MM-DD形式 ")
  public String getDateFrom() {
    return dateFrom;
  }

  public void setDateFrom(String dateFrom) {
    this.dateFrom = dateFrom;
  }

  public TransactionsResponse dateTo(String dateTo) {
    this.dateTo = dateTo;
    return this;
  }

   /**
   * 対象期間To 半角文字 YYYY-MM-DD形式 
   * @return dateTo
  **/
  @ApiModelProperty(example = "2018-08-10", required = true, value = "対象期間To 半角文字 YYYY-MM-DD形式 ")
  public String getDateTo() {
    return dateTo;
  }

  public void setDateTo(String dateTo) {
    this.dateTo = dateTo;
  }

  public TransactionsResponse baseDate(String baseDate) {
    this.baseDate = baseDate;
    return this;
  }

   /**
   * 基準日 入出金明細を照会した基準日を示します YYYY-MM-DD形式 
   * @return baseDate
  **/
  @ApiModelProperty(example = "2018-08-10", required = true, value = "基準日 入出金明細を照会した基準日を示します YYYY-MM-DD形式 ")
  public String getBaseDate() {
    return baseDate;
  }

  public void setBaseDate(String baseDate) {
    this.baseDate = baseDate;
  }

  public TransactionsResponse baseTime(String baseTime) {
    this.baseTime = baseTime;
    return this;
  }

   /**
   * 基準時刻 入出金明細を照会した基準時刻を示します HH:MM:SS+09:00形式 
   * @return baseTime
  **/
  @ApiModelProperty(example = "10:00:00+09:00", required = true, value = "基準時刻 入出金明細を照会した基準時刻を示します HH:MM:SS+09:00形式 ")
  public String getBaseTime() {
    return baseTime;
  }

  public void setBaseTime(String baseTime) {
    this.baseTime = baseTime;
  }

  public TransactionsResponse hasNext(Boolean hasNext) {
    this.hasNext = hasNext;
    return this;
  }

   /**
   * 次明細フラグ ・true&#x3D;次明細あり ・false&#x3D;次明細なし 
   * @return hasNext
  **/
  @ApiModelProperty(example = "true", required = true, value = "次明細フラグ ・true=次明細あり ・false=次明細なし ")
  public Boolean isHasNext() {
    return hasNext;
  }

  public void setHasNext(Boolean hasNext) {
    this.hasNext = hasNext;
  }

  public TransactionsResponse nextItemKey(String nextItemKey) {
    this.nextItemKey = nextItemKey;
    return this;
  }

   /**
   * 次明細キー 半角数字 次明細フラグがfalseの場合はNULL 
   * @return nextItemKey
  **/
  @ApiModelProperty(example = "20181012090520112541", value = "次明細キー 半角数字 次明細フラグがfalseの場合はNULL ")
  public String getNextItemKey() {
    return nextItemKey;
  }

  public void setNextItemKey(String nextItemKey) {
    this.nextItemKey = nextItemKey;
  }

  public TransactionsResponse count(String count) {
    this.count = count;
    return this;
  }

   /**
   * 明細取得件数 半角数字 
   * @return count
  **/
  @ApiModelProperty(example = "500", required = true, value = "明細取得件数 半角数字 ")
  public String getCount() {
    return count;
  }

  public void setCount(String count) {
    this.count = count;
  }

  public TransactionsResponse transactions(List<Transaction> transactions) {
    this.transactions = transactions;
    return this;
  }

  public TransactionsResponse addTransactionsItem(Transaction transactionsItem) {
    if (this.transactions == null) {
      this.transactions = new ArrayList<>();
    }
    this.transactions.add(transactionsItem);
    return this;
  }

   /**
   * 入出金明細情報リスト 該当する情報が無い場合は、空のリストを返却します 
   * @return transactions
  **/
  @ApiModelProperty(value = "入出金明細情報リスト 該当する情報が無い場合は、空のリストを返却します ")
  public List<Transaction> getTransactions() {
    return transactions;
  }

  public void setTransactions(List<Transaction> transactions) {
    this.transactions = transactions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionsResponse transactionsResponse = (TransactionsResponse) o;
    return Objects.equals(this.accountId, transactionsResponse.accountId) &&
        Objects.equals(this.currencyCode, transactionsResponse.currencyCode) &&
        Objects.equals(this.currencyName, transactionsResponse.currencyName) &&
        Objects.equals(this.dateFrom, transactionsResponse.dateFrom) &&
        Objects.equals(this.dateTo, transactionsResponse.dateTo) &&
        Objects.equals(this.baseDate, transactionsResponse.baseDate) &&
        Objects.equals(this.baseTime, transactionsResponse.baseTime) &&
        Objects.equals(this.hasNext, transactionsResponse.hasNext) &&
        Objects.equals(this.nextItemKey, transactionsResponse.nextItemKey) &&
        Objects.equals(this.count, transactionsResponse.count) &&
        Objects.equals(this.transactions, transactionsResponse.transactions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, currencyCode, currencyName, dateFrom, dateTo, baseDate, baseTime, hasNext, nextItemKey, count, transactions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionsResponse {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    currencyName: ").append(toIndentedString(currencyName)).append("\n");
    sb.append("    dateFrom: ").append(toIndentedString(dateFrom)).append("\n");
    sb.append("    dateTo: ").append(toIndentedString(dateTo)).append("\n");
    sb.append("    baseDate: ").append(toIndentedString(baseDate)).append("\n");
    sb.append("    baseTime: ").append(toIndentedString(baseTime)).append("\n");
    sb.append("    hasNext: ").append(toIndentedString(hasNext)).append("\n");
    sb.append("    nextItemKey: ").append(toIndentedString(nextItemKey)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    transactions: ").append(toIndentedString(transactions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

