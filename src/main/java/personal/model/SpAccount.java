/*
 * GMO Aozora Net Bank Open API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package personal.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import java.util.Objects;

/**
 * SpAccount
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-12-18T06:43:57.831Z")
public class SpAccount {
  @SerializedName("accountId")
  private String accountId = null;

  @SerializedName("spAccountTypeCode")
  private String spAccountTypeCode = null;

  @SerializedName("spAccountTypeCodeName")
  private String spAccountTypeCodeName = null;

  @SerializedName("spAccountName")
  private String spAccountName = null;

  @SerializedName("spAccountBranchCode")
  private String spAccountBranchCode = null;

  @SerializedName("spAccountBranchName")
  private String spAccountBranchName = null;

  @SerializedName("spAccountNumber")
  private String spAccountNumber = null;

  public SpAccount accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * 口座ID 半角英数字 つかいわけ口座を識別するID 
   * @return accountId
  **/
  @ApiModelProperty(example = "SP101011234567", required = true, value = "口座ID 半角英数字 つかいわけ口座を識別するID ")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public SpAccount spAccountTypeCode(String spAccountTypeCode) {
    this.spAccountTypeCode = spAccountTypeCode;
    return this;
  }

   /**
   * つかいわけ口座種別コード 半角数字 ・1&#x3D;親口座 ・2&#x3D;子口座 
   * @return spAccountTypeCode
  **/
  @ApiModelProperty(example = "2", required = true, value = "つかいわけ口座種別コード 半角数字 ・1=親口座 ・2=子口座 ")
  public String getSpAccountTypeCode() {
    return spAccountTypeCode;
  }

  public void setSpAccountTypeCode(String spAccountTypeCode) {
    this.spAccountTypeCode = spAccountTypeCode;
  }

  public SpAccount spAccountTypeCodeName(String spAccountTypeCodeName) {
    this.spAccountTypeCodeName = spAccountTypeCodeName;
    return this;
  }

   /**
   * つかいわけ口座種別コード名称 全角文字 つかいわけ口座種別コードの名称 
   * @return spAccountTypeCodeName
  **/
  @ApiModelProperty(example = "子口座", required = true, value = "つかいわけ口座種別コード名称 全角文字 つかいわけ口座種別コードの名称 ")
  public String getSpAccountTypeCodeName() {
    return spAccountTypeCodeName;
  }

  public void setSpAccountTypeCodeName(String spAccountTypeCodeName) {
    this.spAccountTypeCodeName = spAccountTypeCodeName;
  }

  public SpAccount spAccountName(String spAccountName) {
    this.spAccountName = spAccountName;
    return this;
  }

   /**
   * つかいわけ口座名 全半角英数記号文字 
   * @return spAccountName
  **/
  @ApiModelProperty(example = "貯蓄専用", required = true, value = "つかいわけ口座名 全半角英数記号文字 ")
  public String getSpAccountName() {
    return spAccountName;
  }

  public void setSpAccountName(String spAccountName) {
    this.spAccountName = spAccountName;
  }

  public SpAccount spAccountBranchCode(String spAccountBranchCode) {
    this.spAccountBranchCode = spAccountBranchCode;
    return this;
  }

   /**
   * 支店コード 半角数字 つかいわけ口座種別コードが「2&#x3D;子口座」の場合のみ設定 該当しない場合NULL 
   * @return spAccountBranchCode
  **/
  @ApiModelProperty(example = "502", value = "支店コード 半角数字 つかいわけ口座種別コードが「2=子口座」の場合のみ設定 該当しない場合NULL ")
  public String getSpAccountBranchCode() {
    return spAccountBranchCode;
  }

  public void setSpAccountBranchCode(String spAccountBranchCode) {
    this.spAccountBranchCode = spAccountBranchCode;
  }

  public SpAccount spAccountBranchName(String spAccountBranchName) {
    this.spAccountBranchName = spAccountBranchName;
    return this;
  }

   /**
   * 支店名 全角文字 つかいわけ口座種別コードが「2&#x3D;子口座」の場合のみ設定 該当しない場合NULL 
   * @return spAccountBranchName
  **/
  @ApiModelProperty(example = "あじさい支店", value = "支店名 全角文字 つかいわけ口座種別コードが「2=子口座」の場合のみ設定 該当しない場合NULL ")
  public String getSpAccountBranchName() {
    return spAccountBranchName;
  }

  public void setSpAccountBranchName(String spAccountBranchName) {
    this.spAccountBranchName = spAccountBranchName;
  }

  public SpAccount spAccountNumber(String spAccountNumber) {
    this.spAccountNumber = spAccountNumber;
    return this;
  }

   /**
   * 口座番号 半角数字 つかいわけ口座種別コードが「2&#x3D;子口座」の場合のみ設定 該当しない場合NULL 
   * @return spAccountNumber
  **/
  @ApiModelProperty(example = "1047569", value = "口座番号 半角数字 つかいわけ口座種別コードが「2=子口座」の場合のみ設定 該当しない場合NULL ")
  public String getSpAccountNumber() {
    return spAccountNumber;
  }

  public void setSpAccountNumber(String spAccountNumber) {
    this.spAccountNumber = spAccountNumber;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SpAccount spAccount = (SpAccount) o;
    return Objects.equals(this.accountId, spAccount.accountId) &&
        Objects.equals(this.spAccountTypeCode, spAccount.spAccountTypeCode) &&
        Objects.equals(this.spAccountTypeCodeName, spAccount.spAccountTypeCodeName) &&
        Objects.equals(this.spAccountName, spAccount.spAccountName) &&
        Objects.equals(this.spAccountBranchCode, spAccount.spAccountBranchCode) &&
        Objects.equals(this.spAccountBranchName, spAccount.spAccountBranchName) &&
        Objects.equals(this.spAccountNumber, spAccount.spAccountNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, spAccountTypeCode, spAccountTypeCodeName, spAccountName, spAccountBranchCode, spAccountBranchName, spAccountNumber);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SpAccount {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    spAccountTypeCode: ").append(toIndentedString(spAccountTypeCode)).append("\n");
    sb.append("    spAccountTypeCodeName: ").append(toIndentedString(spAccountTypeCodeName)).append("\n");
    sb.append("    spAccountName: ").append(toIndentedString(spAccountName)).append("\n");
    sb.append("    spAccountBranchCode: ").append(toIndentedString(spAccountBranchCode)).append("\n");
    sb.append("    spAccountBranchName: ").append(toIndentedString(spAccountBranchName)).append("\n");
    sb.append("    spAccountNumber: ").append(toIndentedString(spAccountNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

