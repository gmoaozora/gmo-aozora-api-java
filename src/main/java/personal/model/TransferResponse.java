/*
 * GMO Aozora Net Bank Open API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package personal.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * TransferResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-12-18T06:43:57.831Z")
public class TransferResponse {
  @SerializedName("accountId")
  private String accountId = null;

  @SerializedName("remitterName")
  private String remitterName = null;

  @SerializedName("transferDesignatedDate")
  private String transferDesignatedDate = null;

  @SerializedName("transferInfos")
  private List<TransferInfo> transferInfos = null;

  public TransferResponse accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * 口座ID 半角数字 口座を識別するID 
   * @return accountId
  **/
  @ApiModelProperty(example = "101011234567", value = "口座ID 半角数字 口座を識別するID ")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public TransferResponse remitterName(String remitterName) {
    this.remitterName = remitterName;
    return this;
  }

   /**
   * 振込依頼人名 半角文字 
   * @return remitterName
  **/
  @ApiModelProperty(example = "ｱｵｿﾞﾗｼﾖｳｼﾞ(ｶ", value = "振込依頼人名 半角文字 ")
  public String getRemitterName() {
    return remitterName;
  }

  public void setRemitterName(String remitterName) {
    this.remitterName = remitterName;
  }

  public TransferResponse transferDesignatedDate(String transferDesignatedDate) {
    this.transferDesignatedDate = transferDesignatedDate;
    return this;
  }

   /**
   * 振込指定日 半角文字 YYYY-MM-DD形式 
   * @return transferDesignatedDate
  **/
  @ApiModelProperty(example = "2018-07-30", value = "振込指定日 半角文字 YYYY-MM-DD形式 ")
  public String getTransferDesignatedDate() {
    return transferDesignatedDate;
  }

  public void setTransferDesignatedDate(String transferDesignatedDate) {
    this.transferDesignatedDate = transferDesignatedDate;
  }

  public TransferResponse transferInfos(List<TransferInfo> transferInfos) {
    this.transferInfos = transferInfos;
    return this;
  }

  public TransferResponse addTransferInfosItem(TransferInfo transferInfosItem) {
    if (this.transferInfos == null) {
      this.transferInfos = new ArrayList<>();
    }
    this.transferInfos.add(transferInfosItem);
    return this;
  }

   /**
   * 振込情報 振込情報のリスト 該当する情報が無い場合は空のリストを返却 
   * @return transferInfos
  **/
  @ApiModelProperty(value = "振込情報 振込情報のリスト 該当する情報が無い場合は空のリストを返却 ")
  public List<TransferInfo> getTransferInfos() {
    return transferInfos;
  }

  public void setTransferInfos(List<TransferInfo> transferInfos) {
    this.transferInfos = transferInfos;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransferResponse transferResponse = (TransferResponse) o;
    return Objects.equals(this.accountId, transferResponse.accountId) &&
        Objects.equals(this.remitterName, transferResponse.remitterName) &&
        Objects.equals(this.transferDesignatedDate, transferResponse.transferDesignatedDate) &&
        Objects.equals(this.transferInfos, transferResponse.transferInfos);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, remitterName, transferDesignatedDate, transferInfos);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransferResponse {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    remitterName: ").append(toIndentedString(remitterName)).append("\n");
    sb.append("    transferDesignatedDate: ").append(toIndentedString(transferDesignatedDate)).append("\n");
    sb.append("    transferInfos: ").append(toIndentedString(transferInfos)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

